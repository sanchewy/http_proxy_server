plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'application'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
    implementation 'log4j:log4j:1.2.17'
    
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
	implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('run') {
	args = ["80"]
}

tasks.withType(JavaExec) {
	args = ["80"]
}

application {
    mainClassName = "http_proxy_server.ProxyServer"
}
